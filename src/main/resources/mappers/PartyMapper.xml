<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.green.gajigaji.party.PartyMapper">

    <insert id="postParty" keyProperty="partySeq" useGeneratedKeys="true">
        INSERT INTO party_master
        SET party_name = #{partyName}
        , party_genre = #{partyGenre}
        , party_location = #{partyLocation}
        , party_min_age = #{partyMinAge}
        , party_max_age = #{partyMaxAge}
        , party_gender = #{partyGender}
        , party_maximum = #{partyMaximum}
        , party_join_gb = #{partyJoinGb}
        , party_intro = #{partyIntro}
        , party_join_form = #{partyJoinForm}
        , party_pic = #{partyPic}
        , party_auth_gb = 1
    </insert>
    <insert id="postMemberForPostParty">
        INSERT INTO party_member
        SET member_party_seq = #{partySeq}
        , member_user_seq = #{userSeq}
        , member_role = 1
        , member_gb = 1
    </insert>

    <select id="getPartyLocation">
        SELECT cd_sub AS cdSub, cd_gb AS cdGb, cd_gb_nm AS cdGbNm
        FROM common_cd
        WHERE cd_sub = #{cdSub}
        AND cd_gb = #{cdGb}
        AND cd_main = 'LO'
    </select>
    <select id="getPartyLocationAll">
        SELECT cd_sub AS cdSub, cd_gb AS cdGb, cd_gb_nm AS cdGbNm
        FROM common_cd
        WHERE cd_sub = #{cdSub}
        AND cd_main = 'LO'
    </select>


<!--        SELECT -->
<!--        A.party_seq AS partySeq, A.party_name AS partyName, A.party_genre AS partyGenre, A.party_location AS partyLocation,-->
<!--        F_COMMON_CD(LPAD(FLOOR(A.party_location / 100), 2, '0'), 'LO-00') AS partyLocation1,-->
<!--        F_COMMON_CD(LPAD(FLOOR(A.party_location / 100), 2, '0'), CONCAT('LO-', LPAD(A.party_location % 100, 2, '0'))) AS partyLocation2,-->
<!--        A.party_min_age AS partyMinAge, A.party_max_age AS partyMaxAge, A.party_gender AS partyGender,-->
<!--        (SELECT COUNT(*) FROM party_member WHERE member_party_seq = A.party_seq) AS partyNowMem, A.party_maximum AS partyMaximum, A.party_join_gb AS partyJoinGb,-->
<!--        A.party_intro AS partyIntro, A.party_join_form AS partyJoinForm, A.party_auth_gb AS partyAuthGb, A.party_pic AS partyPic,-->
<!--        A.input_dt AS inputDt, A.update_dt AS updateDt, C.user_seq AS userSeq, C.user_name AS userName, C.user_pic AS userPic-->
<!--        FROM party_master A-->
<!--        JOIN party_member B ON A.party_seq = B.member_party_seq-->
<!--        JOIN user_master C ON B.member_user_seq = C.user_seq-->
<!--        WHERE B.member_user_seq = C.user_seq AND B.member_party_seq = A.party_seq AND B.member_role = 1-->
<!--        GROUP BY-->
<!--        A.party_seq, A.party_name, A.party_genre, A.party_min_age, A.party_max_age, A.party_gender, A.party_maximum,-->
<!--        A.party_join_gb, A.party_intro, A.party_join_form, A.party_auth_gb, A.party_pic, A.input_dt, C.user_seq-->
<!--        ORDER BY A.input_dt DESC-->
<!--    </select> -->

    <select id="getPartyDetail">
        SELECT
        A.party_seq AS partySeq,
        A.party_name AS partyName,
        A.party_genre AS partyGenre,
        A.party_location AS partyLocation,
        F_COMMON_CD(LPAD(FLOOR(A.party_location / 100), 2, '0'), 'LO-00') AS partyLocation1,
        F_COMMON_CD(LPAD(A.party_location % 100, 2, '0'), CONCAT('LO-', LPAD(FLOOR(A.party_location / 100), 2, '0'))) AS partyLocation2,
        A.party_min_age AS partyMinAge,
        A.party_max_age AS partyMaxAge,
        A.party_gender AS partyGender,
        (SELECT COUNT(*) FROM party_member WHERE member_party_seq = A.party_seq) AS partyNowMem,
        A.party_maximum AS partyMaximum,
        A.party_join_gb AS partyJoinGb,
        A.party_intro AS partyIntro,
        A.party_join_form AS partyJoinForm,
        A.party_auth_gb AS partyAuthGb,
        A.party_pic AS partyPic,
        A.input_dt AS inputDt,
        A.update_dt AS updateDt,
        C.user_seq AS userSeq,
        C.user_name AS userName,
        C.user_pic AS userPic
        FROM party_master A
        JOIN party_member B ON A.party_seq = B.member_party_seq
        JOIN user_master C ON B.member_user_seq = C.user_seq
        WHERE B.member_user_seq = C.user_seq AND B.member_party_seq = #{partySeq} AND B.member_role = 1
        GROUP BY
        A.party_seq, A.party_name, A.party_genre, A.party_min_age, A.party_max_age, A.party_gender, A.party_maximum,
        A.party_join_gb, A.party_intro, A.party_join_form, A.party_auth_gb, A.party_pic, A.input_dt, C.user_seq
        ORDER BY A.input_dt DESC


<!--        SELECT-->
<!--        A.party_seq AS partySeq, A.party_name AS partyName, A.party_genre AS partyGenre, A.party_location AS partyLocation,-->
<!--        F_COMMON_CD(LPAD(FLOOR(A.party_location / 100), 2, '0'), 'LO-00') AS partyLocation1,-->
<!--        F_COMMON_CD(LPAD(FLOOR(A.party_location / 100), 2, '0'), CONCAT('LO-', LPAD(A.party_location % 100, 2, '0'))) AS partyLocation2,-->
<!--        A.party_min_age AS partyMinAge, A.party_max_age AS partyMaxAge, A.party_gender AS partyGender,-->
<!--        (SELECT COUNT(*) FROM party_member WHERE member_party_seq = A.party_seq) AS partyNowMem, A.party_maximum AS partyMaximum, A.party_join_gb AS partyJoinGb,-->
<!--        A.party_intro AS partyIntro, A.party_join_form AS partyJoinForm, A.party_auth_gb AS partyAuthGb, A.party_pic AS partyPic,-->
<!--        A.input_dt AS inputDt, A.update_dt AS updateDt, C.user_seq AS userSeq, C.user_name AS userName, C.user_pic AS userPic-->
<!--        FROM party_master A-->
<!--        JOIN party_member B ON A.party_seq = B.member_party_seq-->
<!--        JOIN user_master C ON B.member_user_seq = C.user_seq-->
<!--        WHERE B.member_user_seq = C.user_seq AND B.member_party_seq = #{partySeq} AND B.member_role = 1-->
<!--        GROUP BY-->
<!--        A.party_seq, A.party_name, A.party_genre, A.party_min_age, A.party_max_age, A.party_gender, A.party_maximum,-->
<!--        A.party_join_gb, A.party_intro, A.party_join_form, A.party_auth_gb, A.party_pic, A.input_dt, C.user_seq-->
<!--        ORDER BY A.input_dt DESC-->
    </select>
    <select id="getPartyMine">
        SELECT
        A.party_seq AS partySeq,
        (SELECT C.user_name FROM party_member B
        JOIN user_master C ON B.member_user_seq = C.user_seq
        WHERE B.member_party_seq = A.party_seq AND B.member_role = 1) AS userName,
        A.party_name AS partyName,
        A.party_auth_gb AS partyAuthGb,
        (SELECT COUNT(*) FROM party_member WHERE member_party_seq = A.party_seq) AS partyNowMem,
        A.party_maximum AS partyMaximum,
        A.party_pic AS partyPic
        FROM party_master A
        JOIN party_member B ON A.party_seq = B.member_party_seq
        JOIN user_master C ON B.member_user_seq = C.user_seq
        WHERE
        C.user_seq = #{userSeq}
        AND B.member_role = 2
        GROUP BY
        A.party_seq, A.party_name, A.party_gender,
        A.party_maximum, A.party_pic
        ORDER BY A.input_dt DESC
        LIMIT #{startIdx}, #{size}




<!--        SELECT-->
<!--        C.party_seq AS partySeq,-->
<!--        A.user_name AS userName,-->
<!--        C.party_name AS partyName,-->
<!--        C.party_auth_gb AS partyAuthGb,-->
<!--        partyNowMem.partyNowMem,-->
<!--        C.party_maximum AS partyMaximum,-->
<!--        C.party_pic AS partyPic-->
<!--        FROM user_master A-->
<!--        JOIN party_member B ON A.user_seq = B.member_user_seq-->
<!--        JOIN party_master C ON B.member_party_seq = C.party_seq-->
<!--        JOIN (-->
<!--        SELECT-->
<!--        member_party_seq,-->
<!--        COUNT(*) AS partyNowMem-->
<!--        FROM party_member-->
<!--        WHERE member_gb = 1-->
<!--        GROUP BY member_party_seq-->
<!--        ) AS partyNowMem ON C.party_seq = partyNowMem.member_party_seq-->
<!--        WHERE B.member_role = 2-->
<!--        AND A.user_seq = #{userSeq}-->
<!--        ORDER BY C.input_dt DESC-->
<!--        LIMIT #{startIdx}, #{size}-->
    </select>

    <select id="getParty">
    SELECT
    A.party_seq AS partySeq,
    A.party_name AS partyName,
    A.party_genre AS partyGenre,
    A.party_location AS partyLocation,
    F_COMMON_CD(LPAD(FLOOR(A.party_location / 100), 2, '0'), 'LO-00') AS partyLocation1,
    F_COMMON_CD(LPAD(A.party_location % 100, 2, '0'), CONCAT('LO-', LPAD(FLOOR(A.party_location / 100), 2, '0'))) AS partyLocation2,
    A.party_min_age AS partyMinAge,
    A.party_max_age AS partyMaxAge,
    A.party_gender AS partyGender,
    (SELECT COUNT(*) FROM party_member WHERE member_party_seq = A.party_seq and member_gb != 2) AS partyNowMem,
    A.party_maximum AS partyMaximum,
    A.party_join_gb AS partyJoinGb,
    A.party_intro AS partyIntro,
    A.party_join_form AS partyJoinForm,
    A.party_auth_gb AS partyAuthGb,
    A.party_pic AS partyPic,
    A.input_dt AS inputDt,
    A.update_dt AS updateDt,
    C.user_seq AS userSeq,
    C.user_name AS userName,
    C.user_pic AS userPic,
    C.user_email as userEmail
    FROM party_master A
    JOIN party_member B ON A.party_seq = B.member_party_seq
    JOIN user_master C ON B.member_user_seq = C.user_seq
    WHERE B.member_user_seq = C.user_seq AND B.member_party_seq = A.party_seq AND B.member_role = 1
    GROUP BY
    A.party_seq, A.party_name, A.party_genre, A.party_min_age, A.party_max_age, A.party_gender, A.party_maximum,
    A.party_join_gb, A.party_intro, A.party_join_form, A.party_auth_gb, A.party_pic, A.input_dt, C.user_seq
    ORDER BY A.input_dt DESC;
    </select>


    <select id="getPartyes">
        SELECT
        A.party_seq AS partySeq,
        A.party_name AS partyName,
        A.party_genre AS partyGenre,
        A.party_location AS partyLocation,
        F_COMMON_CD(LPAD(FLOOR(A.party_location / 100), 2, '0'), 'LO-00') AS partyLocation1,
        F_COMMON_CD(LPAD(A.party_location % 100, 2, '0'), CONCAT('LO-', LPAD(FLOOR(A.party_location / 100), 2, '0'))) AS partyLocation2,
        A.party_min_age AS partyMinAge,
        A.party_max_age AS partyMaxAge,
        A.party_gender AS partyGender,
        (SELECT COUNT(*) FROM party_member WHERE member_party_seq = A.party_seq and member_gb != 2) AS partyNowMem,
        A.party_maximum AS partyMaximum,
        A.party_join_gb AS partyJoinGb,
        A.party_intro AS partyIntro,
        A.party_join_form AS partyJoinForm,
        A.party_auth_gb AS partyAuthGb,
        A.party_pic AS partyPic,
        A.input_dt AS inputDt,
        A.update_dt AS updateDt,
        C.user_seq AS userSeq,
        C.user_name AS userName,
        C.user_pic AS userPic,
        C.user_email as userEmail
        FROM party_master A
        JOIN party_member B ON A.party_seq = B.member_party_seq
        JOIN user_master C ON B.member_user_seq = C.user_seq
        WHERE
        B.member_user_seq = C.user_seq AND B.member_party_seq = A.party_seq AND B.member_role = 1
        <if test="search != null or search == 0">
            AND 1 = 1
        </if>
        <if test="search != null and search == 1">
            AND party_name like concat('%',#{searchData},'%')
        </if>
        <if test="search != null and search == 2">
            AND party_location like concat('%',#{searchData},'%')
        </if>
        <if test="search != null and search == 3">
            AND user_name like concat('%',#{searchData},'%')
        </if>
        <if test="search != null and search == 4">
            AND party_name like concat('%',#{searchData},'%')
            OR party_location like concat('%',#{searchData},'%')
            OR user_name like concat('%',#{searchData},'%')
        </if>
        GROUP BY
        A.party_seq, A.party_name, A.party_genre, A.party_min_age, A.party_max_age, A.party_gender, A.party_maximum,
        A.party_join_gb, A.party_intro, A.party_join_form, A.party_auth_gb, A.party_pic, A.input_dt, C.user_seq
        ORDER BY A.input_dt DESC
        LIMIT #{startIdx}, #{size} ;
    </select>

    <select id="getTotalElements">
        SELECT COUNT(*)
        FROM party_master A
        INNER JOIN party_member B
        ON B.member_party_seq = A.party_seq
        INNER JOIN user_master C
        ON B.member_user_seq = C.user_seq

        WHERE 1=1
        <if test="partySeq == 0">
            AND A.party_seq = #{partySeq}
        </if>
        <if test="search == 1">
            AND (TRIM(REPLACE(A.party_name,' ','')) LIKE CONCAT('%', #{searchData}, '%')
        </if>
        <if test="search == 2">
            AND TRIM(REPLACE(A.party_location,' ','')) LIKE CONCAT('%', #{searchData}, '%')
        </if>
        <if test="search == 3">
            AND TRIM(REPLACE(A.user_name,' ','')) LIKE CONCAT('%', #{searchData}, '%')
        </if>
        <if test="search == 4">
            AND (TRIM(REPLACE(A.party_name,' ','')) LIKE CONCAT('%', #{searchData}, '%')
            OR TRIM(REPLACE(A.party_location,' ','')) LIKE CONCAT('%', #{searchData}, '%')
            OR TRIM(REPLACE(A.user_name,' ','')) LIKE CONCAT('%', #{searchData}, '%')
        </if>
    </select>


    <select id="getPicses">
        SELECT party_pic as partyPic
        FROM party_master
        WHERE party_seq = #{partySeq}
        ORDER BY party_seq desc
    </select>

    <select id="getPartyMineCount">
        SELECT COUNT(C.party_seq)
        FROM user_master A
        JOIN party_member B ON A.user_seq = B.member_user_seq
        JOIN party_master C ON B.member_party_seq = C.party_seq
        WHERE B.member_role = 2
        AND A.user_seq = #{userSeq}
    </select>
    <select id="getPartyLeader">
        SELECT
        C.party_seq AS partySeq,
        A.user_name AS userName,
        C.party_name AS partyName,
        C.party_auth_gb AS partyAuthGb,
        partyNowMem.partyNowMem,
        C.party_maximum AS partyMaximum,
        C.party_pic AS partyPic
        FROM user_master A
        JOIN party_member B ON A.user_seq = B.member_user_seq
        JOIN party_master C ON B.member_party_seq = C.party_seq
        JOIN (
        SELECT
        member_party_seq,
        COUNT(*) AS partyNowMem
        FROM party_member
        WHERE member_gb = 1
        GROUP BY member_party_seq
        ) AS partyNowMem ON C.party_seq = partyNowMem.member_party_seq
        WHERE B.member_role = 1
        AND A.user_seq = #{userSeq}
        ORDER BY C.input_dt DESC
        LIMIT #{startIdx}, #{size}
    </select>
    <select id="getPartyLeaderCount">
        SELECT COUNT(C.party_seq)
        FROM user_master A
        JOIN party_member B ON A.user_seq = B.member_user_seq
        JOIN party_master C ON B.member_party_seq = C.party_seq
        WHERE B.member_role = 1
        AND A.user_seq = #{userSeq}
    </select>

    <update id="updateParty">
        UPDATE party_master
        SET
        party_name = #{partyName}
        , party_genre = #{partyGenre}
        , party_location = #{partyLocation}
        , party_min_age = #{partyMinAge}
        , party_max_age = #{partyMaxAge}
        , party_gender = #{partyGender}
        , party_maximum = #{partyMaximum}
        , party_intro = #{partyIntro}
        , party_join_form = #{partyJoinForm}
        <if test="partyPic !=null">
            ,party_pic = #{partyPic}
        </if>
        WHERE party_seq = #{partySeq}
    </update>

    <update id="updatePartyRejected">
        UPDATE party_master
        SET
        party_name = #{partyName}
        , party_genre = #{partyGenre}
        , party_location = #{partyLocation}
        , party_min_age = #{partyMinAge}
        , party_max_age = #{partyMaxAge}
        , party_gender = #{partyGender}
        , party_maximum = #{partyMaximum}
        , party_intro = #{partyIntro}
        , party_join_form = #{partyJoinForm}
        , party_auth_gb = 1
        <if test="partyPic !=null">
            ,party_pic = #{partyPic}
        </if>
        WHERE party_seq = #{partySeq}
    </update>

    <update id="updatePartyAuthGb1">
        UPDATE party_master
        SET party_auth_gb = 2
        WHERE party_seq = #{partySeq}
    </update>
    <select id="getPartyAuthGb">
        SELECT party_auth_gb
        FROM party_master
        WHERE party_seq = #{partySeq}
    </select>

    <update id="updatePartyAuthGb2">
        UPDATE party_master
        SET party_auth_gb = 4
        WHERE party_seq = #{partySeq}
    </update>
</mapper>