spring:
  application:
    name: gajigaji
  config:
    import: optional:file:.env  # file : 파일 import, .env : 파일명
  mail:
    username: ${EMAIL_USER}
    password: ${EMAIL_PASSWORD}


#  jackson:
#    deserialization:
#      fail-on-unknown-properties: false

  datasource:
    driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
    url: ${PROD.DB_URL}
    username: ${PROD.DB_USERNAME}
    password: ${PROD.DB_PASSWORD}

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${SOCIAL.GOOGLE.CLIENT_ID}
            client-secret: ${SOCIAL.GOOGLE.SECRET}
            scope:
              - email
              - profile
          kakao:
            client-id: ${SOCIAL.KAKAO.CLIENT_ID}
            client-secret: ${SOCIAL.KAKAO.SECRET}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            scope:
              - profile_nickname
              - profile_image
              - account_email
            client-name: Kakao
          naver:
            client-id: ${SOCIAL.NAVER.CLIENT_ID}
            client-secret: ${SOCIAL.NAVER.SECRET}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            scope:
              - name
              - email
              - profile_image
            client-name: Naver
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-info-authentication-method: header
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response


  servlet:
    multipart:
      max-file-size: 30MB
      max-request-size: 50MB
  data:
    redis:
      host: localhost
      port: 6379
  jpa:
    database: mysql
    properties:
      hibernate:
        jdbc:
          batch_size: 50 # JPA Batch 작업(Insert, Update)
        format_sql: true #로그 찍을 때 보기편하게 포맷팅해서 출력해줘
        order_inserts: true # JPA Batch 작업(Insert, Update)
        order_updates: true # JPA Batch 작업(Insert, Update)
    show-sql: true # JPA만든 쿼리문 로그에 출력해줘

mybatis:
  mapper-locations: mappers/**/*.xml

springdoc:
  api-docs:
    version: openapi_3_1
  swagger-ui:
    path: /swagger
    operations-sorter: method
    default-model-expand-depth: 10
    default-models-expand-depth: 10
    display-request-duration: true
  cache:
    disabled: true

file:
  directory: ${DEFAULT.FILE_DIRECTORY}


app:
  jwt:
    secret: ${JWT_SECRET}
    header-schema-name: authorization
    token-type: Bearer
    access-token-expiry: 1800000
    # 1800000 (ms) : 30분

    # RT(Refresh-Token) - 만료시간(ms) - 15일
    refresh-token-cookie-name: refresh-token
    refresh-token-expiry: 1296000000
  oauth2:
    base-uri: /oauth2/authorization
    authorization-request-cookie-name: oauth2_auth_request
    redirect-uri-param-cookie-name: redirect_uri
    cookie-expiry-seconds: 180
    authorized-redirect-uris:
      - http://localhost:3000/oauth/redirect
      - http://localhost:8080/oauth/redirect
      - http://192.168.0.144:5122/oauth/redirect
      - http://112.222.157.156:5122/oauth/redirect

management:
  endpoint:
    health:
      show-details: always

  endpoints:
    web:
      exposure:
        include: "*"
  info:
    java:
      enabled: true
    os:
      enabled: true
    env:
      enabled: true
  server:
    port: 8080

---
spring:
  config:
    activate:
      on-profile: prod
  data:
    redis:
      port: 6379
      host: 192.168.0.144
  datasource:
    url: ${PROD.DB_URL}
    username: ${PROD.DB_USERNAME}
    password: ${PROD.DB_PASSWORD}
  jpa:
    open-in-view: false
    properties:
      hibernate:
        cache.use_second_level_cache: false

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${SOCIAL.GOOGLE.CLIENT_ID}
            client-secret: ${SOCIAL.GOOGLE.SECRET}
            scope:
              - email
              - profile
          kakao:
            client-id: ${SOCIAL.KAKAO.CLIENT_ID}
            client-secret: ${SOCIAL.KAKAO.SECRET}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            scope:
              - profile_nickname
              - profile_image
              - account_email
            client-name: Kakao
          naver:
            client-id: ${SOCIAL.NAVER.CLIENT_ID}
            client-secret: ${SOCIAL.NAVER.SECRET}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            scope:
              - name
              - email
              - profile_image
            client-name: Naver
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-info-authentication-method: header
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

app:
  oauth2:
    base-uri: /oauth2/authorization
    authorization-request-cookie-name: oauth2_auth_request
    redirect-uri-param-cookie-name: redirect_uri
    cookie-expiry-seconds: 180
    authorized-redirect-uris:
      - http://localhost:3000/oauth/redirect
      - http://localhost:8080/oauth/redirect
      - http://192.168.0.144:5122/oauth/redirect
      - http://112.222.157.156:5122/oauth/redirect



file:
  directory: ${PROD.FILE_DIRECTORY}

---

spring:
  config:
    activate:
      on-profile: tdd
  datasource:
    url: jdbc:log4jdbc:mariadb://localhost:3306/gajigaji2
  sql:
    init:
      mode: always
file:
  directory: ${TDD.FILE_DIRECTORY}